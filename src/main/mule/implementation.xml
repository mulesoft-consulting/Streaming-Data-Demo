<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="streamingParseXmlFlow" doc:id="7226df89-5847-4b7b-8221-73ed0cb3903b" >
		<file:listener doc:name="XML" doc:id="82912210-3336-4e24-9afe-8a292f3cb765" config-ref="File_Config" outputMimeType="application/xml; connectionpath=Envelope.Body.Get_Students_Response.Response_Data.Student; streaming=true" directory="C:\Users\jalton\Desktop\LocalTest\Input">
			<scheduling-strategy >
				<fixed-frequency />
			</scheduling-strategy>
			<file:matcher filenamePattern="*.xml" />
		</file:listener>
		<ee:transform doc:name="Extract StudentData JSON" doc:id="a1ccdbe6-6c03-400b-82cf-c658f4f86066">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
@StreamCapable()
input payload application/xml duplicateKeyAsArry = true
output application/json deferred = true 
---
students: payload.Envelope.Body.Get_Students_Response.Response_Data.Student.*Student_Data map (o, i) -> {
    student: o mapObject (value, key) -> {
      (key): value
      }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<foreach doc:name="For Each" doc:id="6bb53ab4-0e73-49c8-b143-a264727ddb4e" collection="#[payload.students]">
			<logger level="INFO" doc:name="Logger" doc:id="36b7441d-a170-434f-9ab9-be9de0fd86d5" message="#[payload]"/>
			<file:write doc:name="Student Data" doc:id="0b44d910-e716-49db-a58f-bc1d6f1f6376" config-ref="File_Config" path="#['C:/Users/jalton/Desktop/LocalTest/Output/' ++ payload.student.ID ++ '.json']" >
				<file:content ><![CDATA[#[payload.student]]]></file:content>
			</file:write>
		</foreach>
	</flow>
	<flow name="streamingFlattenJsonFlowStudentFiles" doc:id="eda357a3-6b65-45a4-afb3-f5fd0417ea8e">
		<file:listener doc:name="JSON" doc:id="482ec07f-a8b2-4edf-a2a2-107766fc99b9" config-ref="File_Config" directory="C:\Users\jalton\Desktop\LocalTest\Input" outputMimeType="application/json; connectionpath=Envelope.Body.Get_Students_Response.Response_Data.Student; streaming=true" >
			<scheduling-strategy >
				<fixed-frequency />
			</scheduling-strategy>
			<file:matcher filenamePattern="*.json" />
		</file:listener>
		<ee:transform doc:name="Flatten and Extract StudentData JSON" doc:id="c233bcc0-d9aa-4890-b58b-1ea4a84321d3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
@StreamCapable()
input payload application/json
output application/json deferred = true 
---
flatten(payload.*"wd:Student")]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<foreach doc:name="For Each Student_Data" doc:id="c2b2f96c-ba6e-4927-bc24-4f1055160131" collection="#[payload]" >
			<logger level="INFO" doc:name="Payload" doc:id="0a48d35a-29c1-4009-9738-94411adf5e24" message="#[payload]" />
			<file:write doc:name="Student Data" doc:id="8d8d862a-aef7-4270-b931-712b2f673ea2" config-ref="File_Config" path="#['C:/Users/jalton/Desktop/LocalTest/Output/' ++ payload.&quot;wd:Student_Data&quot;.&quot;wd:Student_ID&quot; ++ '.json']" >
			</file:write>
		</foreach>
	</flow>
	<flow name="streamingFlattenJsonFlowOneFile" doc:id="ae2c38b6-d82f-4f89-9eb2-ed8c086f3770" initialState="stopped">
		<file:listener doc:name="JSON" doc:id="e0e8b872-5a5f-48f5-adf4-117c8815448d" config-ref="File_Config" directory="C:\Users\jalton\Desktop\LocalTest\Input" outputMimeType="application/json; connectionpath=Envelope.Body.Get_Students_Response.Response_Data.Student; streaming=true" >
			<scheduling-strategy >
				<fixed-frequency />
			</scheduling-strategy>
			<file:matcher filenamePattern="*.json" />
		</file:listener>
		<ee:transform doc:name="Flatten and Extract StudentData JSON" doc:id="3273a28e-451a-4ac6-8d44-418cf04b5e12" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
@StreamCapable()
input payload application/json
output application/json deferred = true 
---
flatten(payload.*"wd:Student")]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<file:write doc:name="Student Data" doc:id="b7d38d53-cdbc-43c1-8001-013bd0433927" config-ref="File_Config" path="#['C:/Users/jalton/Desktop/LocalTest/Output/students.json']" />
	</flow>
</mule>
